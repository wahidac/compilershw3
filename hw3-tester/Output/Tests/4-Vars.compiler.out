

const methods_A
  :A.run
  :A.helper

func Main()
  t.0 = HeapAllocZ(4)
  [t.0+0] = :methods_A
  if t.0 goto :null0
    Error("null pointer")
  null0:
  t.1 = t.0

  t.2 = [t.1+0]
  t.3 = [t.2+0]
  t.4 = call t.3(t.1)
  PrintIntS(t.4)
  ret

func A.run(this )

  t.0 = this
  t.1 = 12
  t.2 = [t.0+0]
  t.3 = [t.2+4]
  t.4 = call t.3(t.0 t.1)
  a = t.4
  t.5 = this
  t.6 = 15
  t.7 = [t.5+0]
  t.8 = [t.7+4]
  t.9 = call t.8(t.5 t.6)
  b = t.9
  t.10 = a
  t.11 = b
  t.12 = Add(t.10 t.11)
  ret t.12
func A.helper(this param)

  t.0 = param
  x = t.0
  t.1 = param
  t.2 = 1
  t.3 = Add(t.1 t.2)
  param = t.3
  t.4 = x
  PrintIntS(t.4)
  t.5 = x
  ret t.5
func AllocArray(size)
  bytes = MulS(size 4)
  bytes = Add(bytes 4)
  v = HeapAllocZ(bytes)
  [v] = size
  ret v
